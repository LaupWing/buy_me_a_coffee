{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffeeFactory_AlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffee__NotSuperUser",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyMeACoffeeAddress",
          "type": "address"
        }
      ],
      "name": "BuyMeACoffeeCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_profile",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_thumbnail",
          "type": "string"
        }
      ],
      "name": "createBuyMeACoffee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployedBuyMeACoffee",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGetRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuperUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "name": "updatePricefeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa64a5861a788785a50d644aef9f12b1c842a28e273d3b5b53b570f2316737802",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "3486336",
    "logsBloom": "0x
    "blockHash": "0xee7b6b60d38b098c95baa04e32fd7bfc1cda1170d34a625de4d5155e026aa11f",
    "transactionHash": "0xa64a5861a788785a50d644aef9f12b1c842a28e273d3b5b53b570f2316737802",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "3486336",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9ebcf4bbcaa97b29569c94b6d2c4611c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BuyMeACoffeeFactory_AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffee__NotSuperUser\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyMeACoffeeAddress\",\"type\":\"address\"}],\"name\":\"BuyMeACoffeeCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_profile\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_thumbnail\",\"type\":\"string\"}],\"name\":\"createBuyMeACoffee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedBuyMeACoffee\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGetRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"name\":\"updatePricefeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffeeFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/BuyMeACoffee.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror BuyMeACoffee__NotEnoughEthSend();\\nerror BuyMeACoffee__NotOwner();\\nerror BuyMeACoffee__NotSuperUser();\\nerror BuyMeACoffeeFactory_AlreadyRegistered();\\n\\ncontract BuyMeACoffeeFactory {\\n   address[] private deployedBuyMeCoffees;\\n   address superUser;\\n   mapping(address => bool) private registered;\\n   AggregatorV3Interface private priceFeed;\\n\\n   modifier onlySuperUser(){\\n      if(msg.sender != superUser){\\n         revert BuyMeACoffee__NotSuperUser();\\n      }\\n      _;\\n   }\\n\\n   event BuyMeACoffeeCreated(address indexed buyMeACoffeeAddress);\\n\\n   constructor(address _priceFeedAddress){\\n      superUser = msg.sender;\\n      priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n   }  \\n\\n   function createBuyMeACoffee(\\n      string memory _name, \\n      string memory _description,\\n      string memory _profile, \\n      string memory _thumbnail\\n   ) public{\\n      if(registered[msg.sender]){\\n         revert BuyMeACoffeeFactory_AlreadyRegistered();\\n      }\\n      address newBuyMeACoffee = address(new BuyMeACoffee(\\n         _name, \\n         _description, \\n         _profile,\\n         _thumbnail,\\n         msg.sender,\\n         superUser,\\n         priceFeed\\n      ));\\n      deployedBuyMeCoffees.push(newBuyMeACoffee);\\n      registered[msg.sender] = true;\\n      emit BuyMeACoffeeCreated(newBuyMeACoffee);\\n   }\\n\\n   function getDeployedBuyMeACoffee() public view returns (address[] memory){\\n      return deployedBuyMeCoffees;\\n   }\\n\\n   function getSuperUser() public view returns (address){\\n      return superUser;\\n   }\\n\\n   function getGetRegistered() public view returns (bool){\\n      return registered[msg.sender];\\n   }\\n\\n   function updatePricefeed(address _priceFeedAddress) public onlySuperUser{\\n      priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n      for(uint256 i; i < deployedBuyMeCoffees.length; i ++){\\n         BuyMeACoffee _contract = BuyMeACoffee(deployedBuyMeCoffees[i]);\\n         _contract.updatePriceFeed(priceFeed, msg.sender);\\n      }\\n   }\\n}\\n\\ncontract BuyMeACoffee {\\n   \\n   struct Memo {\\n      address from;\\n      uint256 timestamp;\\n      string name;\\n      string message;\\n      string response;\\n      uint256 items_id;\\n   }\\n\\n   /**\\n    * @dev The deployer of the contract can define a combination of items \\n    * @notice For example if the deployer want to have items combination of bread and coffee for 15 eth. In the frontend the deployer can put in the amount in dollars but it will be saved as eth.\\n    */\\n   struct Items {\\n      string[] names;\\n      uint256 cost;\\n      uint256 id;\\n   }\\n\\n   modifier onlyOwner(){\\n      if(msg.sender != owner){\\n         revert BuyMeACoffee__NotOwner();\\n      }\\n      _;\\n   }\\n\\n   modifier onlySuperUser(address sender){\\n      if(sender != superUser){\\n         revert BuyMeACoffee__NotSuperUser();\\n      }\\n      _;\\n   }\\n\\n   Memo[] private memos;\\n   Items[] private listOfItems;\\n   AggregatorV3Interface internal priceFeed;\\n   address payable private owner;\\n   address private superUser;\\n   uint256 private itemsCount = 0;\\n   string private name;\\n   string private profile;\\n   string private thumbnail;\\n   string private description;\\n\\n   constructor( \\n      string memory _name, \\n      string memory _description, \\n      string memory _profile, \\n      string memory _thumbnail, \\n      address _owner,\\n      address _superUser,\\n      AggregatorV3Interface _priceFeed\\n   ) {\\n      name = _name;\\n      description = _description;\\n      profile = _profile;\\n      thumbnail = _thumbnail;\\n      priceFeed = _priceFeed;\\n      owner = payable(_owner);\\n      superUser = _superUser;\\n   }\\n\\n   function setName (string memory _name) public onlyOwner{\\n      name = _name;\\n   }\\n\\n   function setDescription (string memory _description) public onlyOwner{\\n      description = _description;\\n   }\\n\\n   function setProfile (string memory _profile) public onlyOwner{\\n      profile = _profile;\\n   }\\n\\n   function setThumbnail (string memory _thumbnail) public onlyOwner{\\n      thumbnail = _thumbnail;\\n   }\\n\\n   function updatePriceFeed (AggregatorV3Interface _priceFeed, address sender) public onlySuperUser(sender){\\n      priceFeed = _priceFeed;\\n   }\\n\\n   function storeMemo(\\n      string memory _name,\\n      string memory _message, \\n      uint256 _itemsId\\n   ) public payable {\\n      Items memory items;\\n      for(uint256 i; i < listOfItems.length; i ++){\\n         if(listOfItems[i].id == _itemsId){\\n            items = listOfItems[i];\\n         }\\n      }\\n      if(msg.value < items.cost){\\n         revert BuyMeACoffee__NotEnoughEthSend();\\n      }\\n      memos.push(Memo(\\n         msg.sender, \\n         block.timestamp, \\n         _name, \\n         _message, \\n         \\\"\\\",\\n         _itemsId\\n      ));\\n   }\\n\\n   function addItems(string[] memory names, uint256 cost) public onlyOwner{\\n      Items memory _items = Items(names, cost, itemsCount);\\n      listOfItems.push(_items);\\n      itemsCount++;\\n   }\\n\\n   function removeItems(uint256 _id) public onlyOwner{\\n      for(uint256 i; i < listOfItems.length; i ++){\\n         if(listOfItems[i].id == _id){\\n            listOfItems[i] = listOfItems[listOfItems.length -1];\\n            listOfItems.pop();\\n         }\\n      }\\n   }\\n\\n   function getLatestPrice() public view returns (int256){\\n      (\\n         ,\\n         int256 price,\\n         ,\\n         ,\\n      ) = priceFeed.latestRoundData();\\n      return price;\\n   }\\n\\n   function getDecimals() public view returns(uint8)  {\\n      uint8 decimals = priceFeed.decimals();\\n      return decimals;\\n   }\\n\\n   function getMemos() public view returns(Memo[] memory){\\n      return memos;\\n   }\\n\\n   function getListOfItems() public view returns (Items[] memory){\\n      return listOfItems;\\n   }\\n\\n   function getName() public view returns (string memory){\\n      return name;\\n   }\\n\\n   function getDescription() public view returns (string memory){\\n      return description;\\n   }\\n\\n   function getProfile() public view returns (string memory){\\n      return profile;\\n   }\\n\\n   function getThumbnail() public view returns (string memory){\\n      return thumbnail;\\n   }\\n\\n   function getOwner() public view returns (address){\\n      return owner;\\n   }\\n\\n   function getPriceFeed() public view returns (AggregatorV3Interface){\\n      return priceFeed;\\n\\n   }\\n\\n   function getItemsCount() public view returns (uint256){\\n      return itemsCount;\\n   }\\n\\n   function getSuperUser() public view returns (address){\\n      return superUser;\\n   }\\n\\n   function withdraw() public onlyOwner{\\n      owner.transfer(address(this).balance);\\n   }\\n}\\n \",\"keccak256\":\"0x70dfa380b432c0b73cf87983ce88f591d738481e9c5ca85007729f7ad8c4ddf9\",\"license\":\"UNLICENSED\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162003eca38038062003eca8339818101604052810190610034919061011f565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b613d6e806200015c6000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80633f40c31414620000635780634bd51d8a14620000835780636c50c11e14620000a5578063790737f014620000c757806391aea23214620000e7575b600080fd5b6200008160048036038101906200007b919062000682565b62000109565b005b6200008d620002d6565b6040516200009c9190620006d1565b60405180910390f35b620000af6200032a565b604051620000be9190620006ff565b60405180910390f35b620000e56004803603810190620000df91906200087e565b62000354565b005b620000f16200056b565b60405162000100919062000a3a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000191576040517fab0aa2a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b600080549050811015620002d2576000808281548110620001fb57620001fa62000a5e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b7997da1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b81526004016200028792919062000af8565b600060405180830381600087803b158015620002a257600080fd5b505af1158015620002b7573d6000803e3d6000fd5b50505050508080620002c99062000b5e565b915050620001d5565b5050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620003d9576040517f976a913600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484848433600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200043490620005fb565b62000446979695949392919062000c34565b604051809103906000f08015801562000463573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f2e89dc5e13c34d4d38cb9b8cb8441b41577a81ace11db35881d73125dcfa003260405160405180910390a25050505050565b60606000805480602002602001604051908101604052809291908181526020018280548015620005f157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620005a6575b5050505050905090565b61306b8062000cce83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064a826200061d565b9050919050565b6200065c816200063d565b81146200066857600080fd5b50565b6000813590506200067c8162000651565b92915050565b6000602082840312156200069b576200069a62000613565b5b6000620006ab848285016200066b565b91505092915050565b60008115159050919050565b620006cb81620006b4565b82525050565b6000602082019050620006e86000830184620006c0565b92915050565b620006f9816200063d565b82525050565b6000602082019050620007166000830184620006ee565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007718262000726565b810181811067ffffffffffffffff8211171562000793576200079262000737565b5b80604052505050565b6000620007a862000609565b9050620007b6828262000766565b919050565b600067ffffffffffffffff821115620007d957620007d862000737565b5b620007e48262000726565b9050602081019050919050565b82818337600083830152505050565b6000620008176200081184620007bb565b6200079c565b90508281526020810184848401111562000836576200083562000721565b5b62000843848285620007f1565b509392505050565b600082601f8301126200086357620008626200071c565b5b81356200087584826020860162000800565b91505092915050565b600080600080608085870312156200089b576200089a62000613565b5b600085013567ffffffffffffffff811115620008bc57620008bb62000618565b5b620008ca878288016200084b565b945050602085013567ffffffffffffffff811115620008ee57620008ed62000618565b5b620008fc878288016200084b565b935050604085013567ffffffffffffffff81111562000920576200091f62000618565b5b6200092e878288016200084b565b925050606085013567ffffffffffffffff81111562000952576200095162000618565b5b62000960878288016200084b565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620009a3816200063d565b82525050565b6000620009b7838362000998565b60208301905092915050565b6000602082019050919050565b6000620009dd826200096c565b620009e9818562000977565b9350620009f68362000988565b8060005b8381101562000a2d57815162000a118882620009a9565b975062000a1e83620009c3565b925050600181019050620009fa565b5085935050505092915050565b6000602082019050818103600083015262000a568184620009d0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600062000ab862000ab262000aac846200061d565b62000a8d565b6200061d565b9050919050565b600062000acc8262000a97565b9050919050565b600062000ae08262000abf565b9050919050565b62000af28162000ad3565b82525050565b600060408201905062000b0f600083018562000ae7565b62000b1e6020830184620006ee565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000b6b8262000b54565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000ba05762000b9f62000b25565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000be757808201518184015260208101905062000bca565b60008484015250505050565b600062000c008262000bab565b62000c0c818562000bb6565b935062000c1e81856020860162000bc7565b62000c298162000726565b840191505092915050565b600060e082019050818103600083015262000c50818a62000bf3565b9050818103602083015262000c66818962000bf3565b9050818103604083015262000c7c818862000bf3565b9050818103606083015262000c92818762000bf3565b905062000ca36080830186620006ee565b62000cb260a0830185620006ee565b62000cc160c083018462000ae7565b9897505050505050505056fe608060405260006005553480156200001657600080fd5b506040516200306b3803806200306b83398181016040528101906200003c919062000391565b86600690816200004d91906200070b565b5085600990816200005f91906200070b565b5084600790816200007191906200070b565b5083600890816200008391906200070b565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050620007f2565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001bd8262000172565b810181811067ffffffffffffffff82111715620001df57620001de62000183565b5b80604052505050565b6000620001f462000154565b9050620002028282620001b2565b919050565b600067ffffffffffffffff82111562000225576200022462000183565b5b620002308262000172565b9050602081019050919050565b60005b838110156200025d57808201518184015260208101905062000240565b60008484015250505050565b6000620002806200027a8462000207565b620001e8565b9050828152602081018484840111156200029f576200029e6200016d565b5b620002ac8482856200023d565b509392505050565b600082601f830112620002cc57620002cb62000168565b5b8151620002de84826020860162000269565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031482620002e7565b9050919050565b620003268162000307565b81146200033257600080fd5b50565b60008151905062000346816200031b565b92915050565b6000620003598262000307565b9050919050565b6200036b816200034c565b81146200037757600080fd5b50565b6000815190506200038b8162000360565b92915050565b600080600080600080600060e0888a031215620003b357620003b26200015e565b5b600088015167ffffffffffffffff811115620003d457620003d362000163565b5b620003e28a828b01620002b4565b975050602088015167ffffffffffffffff81111562000406576200040562000163565b5b620004148a828b01620002b4565b965050604088015167ffffffffffffffff81111562000438576200043762000163565b5b620004468a828b01620002b4565b955050606088015167ffffffffffffffff8111156200046a576200046962000163565b5b620004788a828b01620002b4565b94505060806200048b8a828b0162000335565b93505060a06200049e8a828b0162000335565b92505060c0620004b18a828b016200037a565b91505092959891949750929550565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200051357607f821691505b602082108103620005295762000528620004cb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000554565b6200059f868362000554565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005ec620005e6620005e084620005b7565b620005c1565b620005b7565b9050919050565b6000819050919050565b6200060883620005cb565b620006206200061782620005f3565b84845462000561565b825550505050565b600090565b6200063762000628565b62000644818484620005fd565b505050565b5b818110156200066c57620006606000826200062d565b6001810190506200064a565b5050565b601f821115620006bb5762000685816200052f565b620006908462000544565b81016020851015620006a0578190505b620006b8620006af8562000544565b83018262000649565b50505b505050565b600082821c905092915050565b6000620006e060001984600802620006c0565b1980831691505092915050565b6000620006fb8383620006cd565b9150826002028217905092915050565b6200071682620004c0565b67ffffffffffffffff81111562000732576200073162000183565b5b6200073e8254620004fa565b6200074b82828562000670565b600060209050601f8311600181146200078357600084156200076e578287015190505b6200077a8582620006ed565b865550620007ea565b601f19841662000793866200052f565b60005b82811015620007bd5784890151825560018201915060208501945060208101905062000796565b86831015620007dd5784890151620007d9601f891682620006cd565b8355505b6001600288020188555050505b505050505050565b61286980620008026000396000f3fe60806040526004361061012a5760003560e01c80638e15f473116100ab578063d6afc9b11161006f578063d6afc9b114610396578063da14bde3146103c1578063dbfc2c12146103ea578063e1d7408314610413578063e9c0d98c1461043e578063f0141d841461045a5761012a565b80638e15f473146102c557806390c3f38f146102f05780639e87a5cd14610319578063b7997da114610344578063c47f00271461036d5761012a565b8063594d9e63116100f2578063594d9e63146101f05780636c50c11e1461021b5780637d44ba7814610246578063865c51721461026f578063893d20e81461029a5761012a565b806317d7de7c1461012f5780631a0925411461015a578063235b37b1146101855780633ccfd60b146101ae578063512dd020146101c5575b600080fd5b34801561013b57600080fd5b50610144610485565b604051610151919061182f565b60405180910390f35b34801561016657600080fd5b5061016f610517565b60405161017c919061182f565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a7919061199a565b6105a9565b005b3480156101ba57600080fd5b506101c3610643565b005b3480156101d157600080fd5b506101da610735565b6040516101e791906119fc565b60405180910390f35b3480156101fc57600080fd5b5061020561073f565b6040516102129190611c44565b60405180910390f35b34801561022757600080fd5b5061023061088b565b60405161023d9190611ca7565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611dd4565b6108b5565b005b34801561027b57600080fd5b506102846109d9565b6040516102919190611f98565b60405180910390f35b3480156102a657600080fd5b506102af610c58565b6040516102bc9190611ca7565b60405180910390f35b3480156102d157600080fd5b506102da610c82565b6040516102e79190611fd3565b60405180910390f35b3480156102fc57600080fd5b506103176004803603810190610312919061199a565b610d23565b005b34801561032557600080fd5b5061032e610dbd565b60405161033b919061204d565b60405180910390f35b34801561035057600080fd5b5061036b600480360381019061036691906120d2565b610de7565b005b34801561037957600080fd5b50610394600480360381019061038f919061199a565b610eb5565b005b3480156103a257600080fd5b506103ab610f4f565b6040516103b8919061182f565b60405180910390f35b3480156103cd57600080fd5b506103e860048036038101906103e39190612112565b610fe1565b005b3480156103f657600080fd5b50610411600480360381019061040c919061199a565b611188565b005b34801561041f57600080fd5b50610428611222565b604051610435919061182f565b60405180910390f35b6104586004803603810190610453919061213f565b6112b4565b005b34801561046657600080fd5b5061046f611589565b60405161047c91906121e6565b60405180910390f35b60606006805461049490612230565b80601f01602080910402602001604051908101604052809291908181526020018280546104c090612230565b801561050d5780601f106104e25761010080835404028352916020019161050d565b820191906000526020600020905b8154815290600101906020018083116104f057829003601f168201915b5050505050905090565b60606009805461052690612230565b80601f016020809104026020016040519081016040528092919081815260200182805461055290612230565b801561059f5780601f106105745761010080835404028352916020019161059f565b820191906000526020600020905b81548152906001019060200180831161058257829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610630576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806007908161063f9190612403565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ca576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610732573d6000803e3d6000fd5b50565b6000600554905090565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610882578382906000526020600020906003020160405180606001604052908160008201805480602002602001604051908101604052809291908181526020016000905b828210156108575783829060005260206000200180546107ca90612230565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690612230565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050505050815260200190600101906107ab565b5050505081526020016001820154815260200160028201548152505081526020019060010190610763565b50505050905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093c576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808481526020018381526020016005548152509050600181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906109a5929190611626565b5060208201518160010155604082015181600201555050600560008154809291906109cf90612504565b9190505550505050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610c4f57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610a9090612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc90612230565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b50505050508152602001600382018054610b2290612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4e90612230565b8015610b9b5780601f10610b7057610100808354040283529160200191610b9b565b820191906000526020600020905b815481529060010190602001808311610b7e57829003601f168201915b50505050508152602001600482018054610bb490612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610be090612230565b8015610c2d5780601f10610c0257610100808354040283529160200191610c2d565b820191906000526020600020905b815481529060010190602001808311610c1057829003601f168201915b50505050508152602001600582015481525050815260200190600101906109fd565b50505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1691906125cf565b5050509150508091505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060099081610db99190612403565b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6f576040517fab0aa2a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3c576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060069081610f4b9190612403565b5050565b606060078054610f5e90612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8a90612230565b8015610fd75780601f10610fac57610100808354040283529160200191610fd7565b820191906000526020600020905b815481529060010190602001808311610fba57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611068576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561118457816001828154811061108d5761108c61264a565b5b906000526020600020906003020160020154036111715760018080805490506110b69190612679565b815481106110c7576110c661264a565b5b9060005260206000209060030201600182815481106110e9576110e861264a565b5b9060005260206000209060030201600082018160000190805461110d92919061167f565b5060018201548160010155600282015481600201559050506001805480611137576111366126ad565b5b60019003818190600052602060002090600302016000808201600061115c91906116dc565b60018201600090556002820160009055505090555b808061117c90612504565b91505061106b565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120f576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008908161121e9190612403565b5050565b60606008805461123190612230565b80601f016020809104026020016040519081016040528092919081815260200182805461125d90612230565b80156112aa5780601f1061127f576101008083540402835291602001916112aa565b820191906000526020600020905b81548152906001019060200180831161128d57829003601f168201915b5050505050905090565b6112bc6116fd565b60005b6001805490508110156114285782600182815481106112e1576112e061264a565b5b90600052602060002090600302016002015403611415576001818154811061130c5761130b61264a565b5b906000526020600020906003020160405180606001604052908160008201805480602002602001604051908101604052809291908181526020016000905b828210156113f657838290600052602060002001805461136990612230565b80601f016020809104026020016040519081016040528092919081815260200182805461139590612230565b80156113e25780601f106113b7576101008083540402835291602001916113e2565b820191906000526020600020905b8154815290600101906020018083116113c557829003601f168201915b50505050508152602001906001019061134a565b5050505081526020016001820154815260200160028201548152505091505b808061142090612504565b9150506112bf565b508060200151341015611467576040517ff1b7411900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186815260200185815260200160405180602001604052806000815250815260200184815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908161154a9190612403565b5060608201518160030190816115609190612403565b5060808201518160040190816115769190612403565b5060a08201518160050155505050505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190612708565b90508091505090565b82805482825590600052602060002090810192821561166e579160200282015b8281111561166d57825182908161165d9190612403565b5091602001919060010190611646565b5b50905061167b919061171e565b5090565b8280548282559060005260206000209081019282156116cb5760005260206000209182015b828111156116ca57828290816116ba919061274b565b50916001019190600101906116a4565b5b5090506116d8919061171e565b5090565b50805460008255906000526020600020908101906116fa919061171e565b50565b60405180606001604052806060815260200160008152602001600081525090565b5b8082111561173e57600081816117359190611742565b5060010161171f565b5090565b50805461174e90612230565b6000825580601f10611760575061177f565b601f01602090049060005260206000209081019061177e9190611782565b5b50565b5b8082111561179b576000816000905550600101611783565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156117d95780820151818401526020810190506117be565b60008484015250505050565b6000601f19601f8301169050919050565b60006118018261179f565b61180b81856117aa565b935061181b8185602086016117bb565b611824816117e5565b840191505092915050565b6000602082019050818103600083015261184981846117f6565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118a7826117e5565b810181811067ffffffffffffffff821117156118c6576118c561186f565b5b80604052505050565b60006118d9611851565b90506118e5828261189e565b919050565b600067ffffffffffffffff8211156119055761190461186f565b5b61190e826117e5565b9050602081019050919050565b82818337600083830152505050565b600061193d611938846118ea565b6118cf565b9050828152602081018484840111156119595761195861186a565b5b61196484828561191b565b509392505050565b600082601f83011261198157611980611865565b5b813561199184826020860161192a565b91505092915050565b6000602082840312156119b0576119af61185b565b5b600082013567ffffffffffffffff8111156119ce576119cd611860565b5b6119da8482850161196c565b91505092915050565b6000819050919050565b6119f6816119e3565b82525050565b6000602082019050611a1160008301846119ed565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611a8b8261179f565b611a958185611a6f565b9350611aa58185602086016117bb565b611aae816117e5565b840191505092915050565b6000611ac58383611a80565b905092915050565b6000602082019050919050565b6000611ae582611a43565b611aef8185611a4e565b935083602082028501611b0185611a5f565b8060005b85811015611b3d5784840389528151611b1e8582611ab9565b9450611b2983611acd565b925060208a01995050600181019050611b05565b50829750879550505050505092915050565b611b58816119e3565b82525050565b60006060830160008301518482036000860152611b7b8282611ada565b9150506020830151611b906020860182611b4f565b506040830151611ba36040860182611b4f565b508091505092915050565b6000611bba8383611b5e565b905092915050565b6000602082019050919050565b6000611bda82611a17565b611be48185611a22565b935083602082028501611bf685611a33565b8060005b85811015611c325784840389528151611c138582611bae565b9450611c1e83611bc2565b925060208a01995050600181019050611bfa565b50829750879550505050505092915050565b60006020820190508181036000830152611c5e8184611bcf565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c9182611c66565b9050919050565b611ca181611c86565b82525050565b6000602082019050611cbc6000830184611c98565b92915050565b600067ffffffffffffffff821115611cdd57611cdc61186f565b5b602082029050602081019050919050565b600080fd5b6000611d06611d0184611cc2565b6118cf565b90508083825260208201905060208402830185811115611d2957611d28611cee565b5b835b81811015611d7057803567ffffffffffffffff811115611d4e57611d4d611865565b5b808601611d5b898261196c565b85526020850194505050602081019050611d2b565b5050509392505050565b600082601f830112611d8f57611d8e611865565b5b8135611d9f848260208601611cf3565b91505092915050565b611db1816119e3565b8114611dbc57600080fd5b50565b600081359050611dce81611da8565b92915050565b60008060408385031215611deb57611dea61185b565b5b600083013567ffffffffffffffff811115611e0957611e08611860565b5b611e1585828601611d7a565b9250506020611e2685828601611dbf565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e6581611c86565b82525050565b600060c083016000830151611e836000860182611e5c565b506020830151611e966020860182611b4f565b5060408301518482036040860152611eae8282611a80565b91505060608301518482036060860152611ec88282611a80565b91505060808301518482036080860152611ee28282611a80565b91505060a0830151611ef760a0860182611b4f565b508091505092915050565b6000611f0e8383611e6b565b905092915050565b6000602082019050919050565b6000611f2e82611e30565b611f388185611e3b565b935083602082028501611f4a85611e4c565b8060005b85811015611f865784840389528151611f678582611f02565b9450611f7283611f16565b925060208a01995050600181019050611f4e565b50829750879550505050505092915050565b60006020820190508181036000830152611fb28184611f23565b905092915050565b6000819050919050565b611fcd81611fba565b82525050565b6000602082019050611fe86000830184611fc4565b92915050565b6000819050919050565b600061201361200e61200984611c66565b611fee565b611c66565b9050919050565b600061202582611ff8565b9050919050565b60006120378261201a565b9050919050565b6120478161202c565b82525050565b6000602082019050612062600083018461203e565b92915050565b600061207382611c86565b9050919050565b61208381612068565b811461208e57600080fd5b50565b6000813590506120a08161207a565b92915050565b6120af81611c86565b81146120ba57600080fd5b50565b6000813590506120cc816120a6565b92915050565b600080604083850312156120e9576120e861185b565b5b60006120f785828601612091565b9250506020612108858286016120bd565b9150509250929050565b6000602082840312156121285761212761185b565b5b600061213684828501611dbf565b91505092915050565b6000806000606084860312156121585761215761185b565b5b600084013567ffffffffffffffff81111561217657612175611860565b5b6121828682870161196c565b935050602084013567ffffffffffffffff8111156121a3576121a2611860565b5b6121af8682870161196c565b92505060406121c086828701611dbf565b9150509250925092565b600060ff82169050919050565b6121e0816121ca565b82525050565b60006020820190506121fb60008301846121d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224857607f821691505b60208210810361225b5761225a612201565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026122c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612286565b6122cd8683612286565b95508019841693508086168417925050509392505050565b60006123006122fb6122f6846119e3565b611fee565b6119e3565b9050919050565b6000819050919050565b61231a836122e5565b61232e61232682612307565b848454612293565b825550505050565b600090565b612343612336565b61234e818484612311565b505050565b5b818110156123725761236760008261233b565b600181019050612354565b5050565b601f8211156123b75761238881612261565b61239184612276565b810160208510156123a0578190505b6123b46123ac85612276565b830182612353565b50505b505050565b600082821c905092915050565b60006123da600019846008026123bc565b1980831691505092915050565b60006123f383836123c9565b9150826002028217905092915050565b61240c8261179f565b67ffffffffffffffff8111156124255761242461186f565b5b61242f8254612230565b61243a828285612376565b600060209050601f83116001811461246d576000841561245b578287015190505b61246585826123e7565b8655506124cd565b601f19841661247b86612261565b60005b828110156124a35784890151825560018201915060208501945060208101905061247e565b868310156124c057848901516124bc601f8916826123c9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250f826119e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612541576125406124d5565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b61256b8161254c565b811461257657600080fd5b50565b60008151905061258881612562565b92915050565b61259781611fba565b81146125a257600080fd5b50565b6000815190506125b48161258e565b92915050565b6000815190506125c981611da8565b92915050565b600080600080600060a086880312156125eb576125ea61185b565b5b60006125f988828901612579565b955050602061260a888289016125a5565b945050604061261b888289016125ba565b935050606061262c888289016125ba565b925050608061263d88828901612579565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612684826119e3565b915061268f836119e3565b92508282039050818111156126a7576126a66124d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6126e5816121ca565b81146126f057600080fd5b50565b600081519050612702816126dc565b92915050565b60006020828403121561271e5761271d61185b565b5b600061272c848285016126f3565b91505092915050565b60008154905061274481612230565b9050919050565b818103612759575050612831565b61276282612735565b67ffffffffffffffff81111561277b5761277a61186f565b5b6127858254612230565b612790828285612376565b6000601f8311600181146127bf57600084156127ad578287015490505b6127b785826123e7565b86555061282a565b601f1984166127cd87612261565b96506127d886612261565b60005b82811015612800578489015482556001820191506001850194506020810190506127db565b8683101561281d5784890154612819601f8916826123c9565b8355505b6001600288020188555050505b5050505050505b56fea264697066735822122096ebfd4845f146b8a4cb268b3d18a2bb789565292e7a2ee0c5c1e95eca3701d464736f6c63430008110033a26469706673582212209c67a64af723da3dab643a467d873328b8a38181f5949689f09e325cd4f51e8d64736f6c63430008110033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80633f40c31414620000635780634bd51d8a14620000835780636c50c11e14620000a5578063790737f014620000c757806391aea23214620000e7575b600080fd5b6200008160048036038101906200007b919062000682565b62000109565b005b6200008d620002d6565b6040516200009c9190620006d1565b60405180910390f35b620000af6200032a565b604051620000be9190620006ff565b60405180910390f35b620000e56004803603810190620000df91906200087e565b62000354565b005b620000f16200056b565b60405162000100919062000a3a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000191576040517fab0aa2a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b600080549050811015620002d2576000808281548110620001fb57620001fa62000a5e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b7997da1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b81526004016200028792919062000af8565b600060405180830381600087803b158015620002a257600080fd5b505af1158015620002b7573d6000803e3d6000fd5b50505050508080620002c99062000b5e565b915050620001d5565b5050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620003d9576040517f976a913600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484848433600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200043490620005fb565b62000446979695949392919062000c34565b604051809103906000f08015801562000463573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f2e89dc5e13c34d4d38cb9b8cb8441b41577a81ace11db35881d73125dcfa003260405160405180910390a25050505050565b60606000805480602002602001604051908101604052809291908181526020018280548015620005f157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620005a6575b5050505050905090565b61306b8062000cce83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064a826200061d565b9050919050565b6200065c816200063d565b81146200066857600080fd5b50565b6000813590506200067c8162000651565b92915050565b6000602082840312156200069b576200069a62000613565b5b6000620006ab848285016200066b565b91505092915050565b60008115159050919050565b620006cb81620006b4565b82525050565b6000602082019050620006e86000830184620006c0565b92915050565b620006f9816200063d565b82525050565b6000602082019050620007166000830184620006ee565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007718262000726565b810181811067ffffffffffffffff8211171562000793576200079262000737565b5b80604052505050565b6000620007a862000609565b9050620007b6828262000766565b919050565b600067ffffffffffffffff821115620007d957620007d862000737565b5b620007e48262000726565b9050602081019050919050565b82818337600083830152505050565b6000620008176200081184620007bb565b6200079c565b90508281526020810184848401111562000836576200083562000721565b5b62000843848285620007f1565b509392505050565b600082601f8301126200086357620008626200071c565b5b81356200087584826020860162000800565b91505092915050565b600080600080608085870312156200089b576200089a62000613565b5b600085013567ffffffffffffffff811115620008bc57620008bb62000618565b5b620008ca878288016200084b565b945050602085013567ffffffffffffffff811115620008ee57620008ed62000618565b5b620008fc878288016200084b565b935050604085013567ffffffffffffffff81111562000920576200091f62000618565b5b6200092e878288016200084b565b925050606085013567ffffffffffffffff81111562000952576200095162000618565b5b62000960878288016200084b565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620009a3816200063d565b82525050565b6000620009b7838362000998565b60208301905092915050565b6000602082019050919050565b6000620009dd826200096c565b620009e9818562000977565b9350620009f68362000988565b8060005b8381101562000a2d57815162000a118882620009a9565b975062000a1e83620009c3565b925050600181019050620009fa565b5085935050505092915050565b6000602082019050818103600083015262000a568184620009d0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600062000ab862000ab262000aac846200061d565b62000a8d565b6200061d565b9050919050565b600062000acc8262000a97565b9050919050565b600062000ae08262000abf565b9050919050565b62000af28162000ad3565b82525050565b600060408201905062000b0f600083018562000ae7565b62000b1e6020830184620006ee565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000b6b8262000b54565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000ba05762000b9f62000b25565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000be757808201518184015260208101905062000bca565b60008484015250505050565b600062000c008262000bab565b62000c0c818562000bb6565b935062000c1e81856020860162000bc7565b62000c298162000726565b840191505092915050565b600060e082019050818103600083015262000c50818a62000bf3565b9050818103602083015262000c66818962000bf3565b9050818103604083015262000c7c818862000bf3565b9050818103606083015262000c92818762000bf3565b905062000ca36080830186620006ee565b62000cb260a0830185620006ee565b62000cc160c083018462000ae7565b9897505050505050505056fe608060405260006005553480156200001657600080fd5b506040516200306b3803806200306b83398181016040528101906200003c919062000391565b86600690816200004d91906200070b565b5085600990816200005f91906200070b565b5084600790816200007191906200070b565b5083600890816200008391906200070b565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050620007f2565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001bd8262000172565b810181811067ffffffffffffffff82111715620001df57620001de62000183565b5b80604052505050565b6000620001f462000154565b9050620002028282620001b2565b919050565b600067ffffffffffffffff82111562000225576200022462000183565b5b620002308262000172565b9050602081019050919050565b60005b838110156200025d57808201518184015260208101905062000240565b60008484015250505050565b6000620002806200027a8462000207565b620001e8565b9050828152602081018484840111156200029f576200029e6200016d565b5b620002ac8482856200023d565b509392505050565b600082601f830112620002cc57620002cb62000168565b5b8151620002de84826020860162000269565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031482620002e7565b9050919050565b620003268162000307565b81146200033257600080fd5b50565b60008151905062000346816200031b565b92915050565b6000620003598262000307565b9050919050565b6200036b816200034c565b81146200037757600080fd5b50565b6000815190506200038b8162000360565b92915050565b600080600080600080600060e0888a031215620003b357620003b26200015e565b5b600088015167ffffffffffffffff811115620003d457620003d362000163565b5b620003e28a828b01620002b4565b975050602088015167ffffffffffffffff81111562000406576200040562000163565b5b620004148a828b01620002b4565b965050604088015167ffffffffffffffff81111562000438576200043762000163565b5b620004468a828b01620002b4565b955050606088015167ffffffffffffffff8111156200046a576200046962000163565b5b620004788a828b01620002b4565b94505060806200048b8a828b0162000335565b93505060a06200049e8a828b0162000335565b92505060c0620004b18a828b016200037a565b91505092959891949750929550565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200051357607f821691505b602082108103620005295762000528620004cb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000554565b6200059f868362000554565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005ec620005e6620005e084620005b7565b620005c1565b620005b7565b9050919050565b6000819050919050565b6200060883620005cb565b620006206200061782620005f3565b84845462000561565b825550505050565b600090565b6200063762000628565b62000644818484620005fd565b505050565b5b818110156200066c57620006606000826200062d565b6001810190506200064a565b5050565b601f821115620006bb5762000685816200052f565b620006908462000544565b81016020851015620006a0578190505b620006b8620006af8562000544565b83018262000649565b50505b505050565b600082821c905092915050565b6000620006e060001984600802620006c0565b1980831691505092915050565b6000620006fb8383620006cd565b9150826002028217905092915050565b6200071682620004c0565b67ffffffffffffffff81111562000732576200073162000183565b5b6200073e8254620004fa565b6200074b82828562000670565b600060209050601f8311600181146200078357600084156200076e578287015190505b6200077a8582620006ed565b865550620007ea565b601f19841662000793866200052f565b60005b82811015620007bd5784890151825560018201915060208501945060208101905062000796565b86831015620007dd5784890151620007d9601f891682620006cd565b8355505b6001600288020188555050505b505050505050565b61286980620008026000396000f3fe60806040526004361061012a5760003560e01c80638e15f473116100ab578063d6afc9b11161006f578063d6afc9b114610396578063da14bde3146103c1578063dbfc2c12146103ea578063e1d7408314610413578063e9c0d98c1461043e578063f0141d841461045a5761012a565b80638e15f473146102c557806390c3f38f146102f05780639e87a5cd14610319578063b7997da114610344578063c47f00271461036d5761012a565b8063594d9e63116100f2578063594d9e63146101f05780636c50c11e1461021b5780637d44ba7814610246578063865c51721461026f578063893d20e81461029a5761012a565b806317d7de7c1461012f5780631a0925411461015a578063235b37b1146101855780633ccfd60b146101ae578063512dd020146101c5575b600080fd5b34801561013b57600080fd5b50610144610485565b604051610151919061182f565b60405180910390f35b34801561016657600080fd5b5061016f610517565b60405161017c919061182f565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a7919061199a565b6105a9565b005b3480156101ba57600080fd5b506101c3610643565b005b3480156101d157600080fd5b506101da610735565b6040516101e791906119fc565b60405180910390f35b3480156101fc57600080fd5b5061020561073f565b6040516102129190611c44565b60405180910390f35b34801561022757600080fd5b5061023061088b565b60405161023d9190611ca7565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611dd4565b6108b5565b005b34801561027b57600080fd5b506102846109d9565b6040516102919190611f98565b60405180910390f35b3480156102a657600080fd5b506102af610c58565b6040516102bc9190611ca7565b60405180910390f35b3480156102d157600080fd5b506102da610c82565b6040516102e79190611fd3565b60405180910390f35b3480156102fc57600080fd5b506103176004803603810190610312919061199a565b610d23565b005b34801561032557600080fd5b5061032e610dbd565b60405161033b919061204d565b60405180910390f35b34801561035057600080fd5b5061036b600480360381019061036691906120d2565b610de7565b005b34801561037957600080fd5b50610394600480360381019061038f919061199a565b610eb5565b005b3480156103a257600080fd5b506103ab610f4f565b6040516103b8919061182f565b60405180910390f35b3480156103cd57600080fd5b506103e860048036038101906103e39190612112565b610fe1565b005b3480156103f657600080fd5b50610411600480360381019061040c919061199a565b611188565b005b34801561041f57600080fd5b50610428611222565b604051610435919061182f565b60405180910390f35b6104586004803603810190610453919061213f565b6112b4565b005b34801561046657600080fd5b5061046f611589565b60405161047c91906121e6565b60405180910390f35b60606006805461049490612230565b80601f01602080910402602001604051908101604052809291908181526020018280546104c090612230565b801561050d5780601f106104e25761010080835404028352916020019161050d565b820191906000526020600020905b8154815290600101906020018083116104f057829003601f168201915b5050505050905090565b60606009805461052690612230565b80601f016020809104026020016040519081016040528092919081815260200182805461055290612230565b801561059f5780601f106105745761010080835404028352916020019161059f565b820191906000526020600020905b81548152906001019060200180831161058257829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610630576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806007908161063f9190612403565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ca576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610732573d6000803e3d6000fd5b50565b6000600554905090565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610882578382906000526020600020906003020160405180606001604052908160008201805480602002602001604051908101604052809291908181526020016000905b828210156108575783829060005260206000200180546107ca90612230565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690612230565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050505050815260200190600101906107ab565b5050505081526020016001820154815260200160028201548152505081526020019060010190610763565b50505050905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093c576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808481526020018381526020016005548152509050600181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906109a5929190611626565b5060208201518160010155604082015181600201555050600560008154809291906109cf90612504565b9190505550505050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610c4f57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610a9090612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc90612230565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b50505050508152602001600382018054610b2290612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4e90612230565b8015610b9b5780601f10610b7057610100808354040283529160200191610b9b565b820191906000526020600020905b815481529060010190602001808311610b7e57829003601f168201915b50505050508152602001600482018054610bb490612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610be090612230565b8015610c2d5780601f10610c0257610100808354040283529160200191610c2d565b820191906000526020600020905b815481529060010190602001808311610c1057829003601f168201915b50505050508152602001600582015481525050815260200190600101906109fd565b50505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1691906125cf565b5050509150508091505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060099081610db99190612403565b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6f576040517fab0aa2a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3c576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060069081610f4b9190612403565b5050565b606060078054610f5e90612230565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8a90612230565b8015610fd75780601f10610fac57610100808354040283529160200191610fd7565b820191906000526020600020905b815481529060010190602001808311610fba57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611068576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561118457816001828154811061108d5761108c61264a565b5b906000526020600020906003020160020154036111715760018080805490506110b69190612679565b815481106110c7576110c661264a565b5b9060005260206000209060030201600182815481106110e9576110e861264a565b5b9060005260206000209060030201600082018160000190805461110d92919061167f565b5060018201548160010155600282015481600201559050506001805480611137576111366126ad565b5b60019003818190600052602060002090600302016000808201600061115c91906116dc565b60018201600090556002820160009055505090555b808061117c90612504565b91505061106b565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120f576040517f1022f53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008908161121e9190612403565b5050565b60606008805461123190612230565b80601f016020809104026020016040519081016040528092919081815260200182805461125d90612230565b80156112aa5780601f1061127f576101008083540402835291602001916112aa565b820191906000526020600020905b81548152906001019060200180831161128d57829003601f168201915b5050505050905090565b6112bc6116fd565b60005b6001805490508110156114285782600182815481106112e1576112e061264a565b5b90600052602060002090600302016002015403611415576001818154811061130c5761130b61264a565b5b906000526020600020906003020160405180606001604052908160008201805480602002602001604051908101604052809291908181526020016000905b828210156113f657838290600052602060002001805461136990612230565b80601f016020809104026020016040519081016040528092919081815260200182805461139590612230565b80156113e25780601f106113b7576101008083540402835291602001916113e2565b820191906000526020600020905b8154815290600101906020018083116113c557829003601f168201915b50505050508152602001906001019061134a565b5050505081526020016001820154815260200160028201548152505091505b808061142090612504565b9150506112bf565b508060200151341015611467576040517ff1b7411900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186815260200185815260200160405180602001604052806000815250815260200184815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908161154a9190612403565b5060608201518160030190816115609190612403565b5060808201518160040190816115769190612403565b5060a08201518160050155505050505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190612708565b90508091505090565b82805482825590600052602060002090810192821561166e579160200282015b8281111561166d57825182908161165d9190612403565b5091602001919060010190611646565b5b50905061167b919061171e565b5090565b8280548282559060005260206000209081019282156116cb5760005260206000209182015b828111156116ca57828290816116ba919061274b565b50916001019190600101906116a4565b5b5090506116d8919061171e565b5090565b50805460008255906000526020600020908101906116fa919061171e565b50565b60405180606001604052806060815260200160008152602001600081525090565b5b8082111561173e57600081816117359190611742565b5060010161171f565b5090565b50805461174e90612230565b6000825580601f10611760575061177f565b601f01602090049060005260206000209081019061177e9190611782565b5b50565b5b8082111561179b576000816000905550600101611783565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156117d95780820151818401526020810190506117be565b60008484015250505050565b6000601f19601f8301169050919050565b60006118018261179f565b61180b81856117aa565b935061181b8185602086016117bb565b611824816117e5565b840191505092915050565b6000602082019050818103600083015261184981846117f6565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118a7826117e5565b810181811067ffffffffffffffff821117156118c6576118c561186f565b5b80604052505050565b60006118d9611851565b90506118e5828261189e565b919050565b600067ffffffffffffffff8211156119055761190461186f565b5b61190e826117e5565b9050602081019050919050565b82818337600083830152505050565b600061193d611938846118ea565b6118cf565b9050828152602081018484840111156119595761195861186a565b5b61196484828561191b565b509392505050565b600082601f83011261198157611980611865565b5b813561199184826020860161192a565b91505092915050565b6000602082840312156119b0576119af61185b565b5b600082013567ffffffffffffffff8111156119ce576119cd611860565b5b6119da8482850161196c565b91505092915050565b6000819050919050565b6119f6816119e3565b82525050565b6000602082019050611a1160008301846119ed565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611a8b8261179f565b611a958185611a6f565b9350611aa58185602086016117bb565b611aae816117e5565b840191505092915050565b6000611ac58383611a80565b905092915050565b6000602082019050919050565b6000611ae582611a43565b611aef8185611a4e565b935083602082028501611b0185611a5f565b8060005b85811015611b3d5784840389528151611b1e8582611ab9565b9450611b2983611acd565b925060208a01995050600181019050611b05565b50829750879550505050505092915050565b611b58816119e3565b82525050565b60006060830160008301518482036000860152611b7b8282611ada565b9150506020830151611b906020860182611b4f565b506040830151611ba36040860182611b4f565b508091505092915050565b6000611bba8383611b5e565b905092915050565b6000602082019050919050565b6000611bda82611a17565b611be48185611a22565b935083602082028501611bf685611a33565b8060005b85811015611c325784840389528151611c138582611bae565b9450611c1e83611bc2565b925060208a01995050600181019050611bfa565b50829750879550505050505092915050565b60006020820190508181036000830152611c5e8184611bcf565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c9182611c66565b9050919050565b611ca181611c86565b82525050565b6000602082019050611cbc6000830184611c98565b92915050565b600067ffffffffffffffff821115611cdd57611cdc61186f565b5b602082029050602081019050919050565b600080fd5b6000611d06611d0184611cc2565b6118cf565b90508083825260208201905060208402830185811115611d2957611d28611cee565b5b835b81811015611d7057803567ffffffffffffffff811115611d4e57611d4d611865565b5b808601611d5b898261196c565b85526020850194505050602081019050611d2b565b5050509392505050565b600082601f830112611d8f57611d8e611865565b5b8135611d9f848260208601611cf3565b91505092915050565b611db1816119e3565b8114611dbc57600080fd5b50565b600081359050611dce81611da8565b92915050565b60008060408385031215611deb57611dea61185b565b5b600083013567ffffffffffffffff811115611e0957611e08611860565b5b611e1585828601611d7a565b9250506020611e2685828601611dbf565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e6581611c86565b82525050565b600060c083016000830151611e836000860182611e5c565b506020830151611e966020860182611b4f565b5060408301518482036040860152611eae8282611a80565b91505060608301518482036060860152611ec88282611a80565b91505060808301518482036080860152611ee28282611a80565b91505060a0830151611ef760a0860182611b4f565b508091505092915050565b6000611f0e8383611e6b565b905092915050565b6000602082019050919050565b6000611f2e82611e30565b611f388185611e3b565b935083602082028501611f4a85611e4c565b8060005b85811015611f865784840389528151611f678582611f02565b9450611f7283611f16565b925060208a01995050600181019050611f4e565b50829750879550505050505092915050565b60006020820190508181036000830152611fb28184611f23565b905092915050565b6000819050919050565b611fcd81611fba565b82525050565b6000602082019050611fe86000830184611fc4565b92915050565b6000819050919050565b600061201361200e61200984611c66565b611fee565b611c66565b9050919050565b600061202582611ff8565b9050919050565b60006120378261201a565b9050919050565b6120478161202c565b82525050565b6000602082019050612062600083018461203e565b92915050565b600061207382611c86565b9050919050565b61208381612068565b811461208e57600080fd5b50565b6000813590506120a08161207a565b92915050565b6120af81611c86565b81146120ba57600080fd5b50565b6000813590506120cc816120a6565b92915050565b600080604083850312156120e9576120e861185b565b5b60006120f785828601612091565b9250506020612108858286016120bd565b9150509250929050565b6000602082840312156121285761212761185b565b5b600061213684828501611dbf565b91505092915050565b6000806000606084860312156121585761215761185b565b5b600084013567ffffffffffffffff81111561217657612175611860565b5b6121828682870161196c565b935050602084013567ffffffffffffffff8111156121a3576121a2611860565b5b6121af8682870161196c565b92505060406121c086828701611dbf565b9150509250925092565b600060ff82169050919050565b6121e0816121ca565b82525050565b60006020820190506121fb60008301846121d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224857607f821691505b60208210810361225b5761225a612201565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026122c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612286565b6122cd8683612286565b95508019841693508086168417925050509392505050565b60006123006122fb6122f6846119e3565b611fee565b6119e3565b9050919050565b6000819050919050565b61231a836122e5565b61232e61232682612307565b848454612293565b825550505050565b600090565b612343612336565b61234e818484612311565b505050565b5b818110156123725761236760008261233b565b600181019050612354565b5050565b601f8211156123b75761238881612261565b61239184612276565b810160208510156123a0578190505b6123b46123ac85612276565b830182612353565b50505b505050565b600082821c905092915050565b60006123da600019846008026123bc565b1980831691505092915050565b60006123f383836123c9565b9150826002028217905092915050565b61240c8261179f565b67ffffffffffffffff8111156124255761242461186f565b5b61242f8254612230565b61243a828285612376565b600060209050601f83116001811461246d576000841561245b578287015190505b61246585826123e7565b8655506124cd565b601f19841661247b86612261565b60005b828110156124a35784890151825560018201915060208501945060208101905061247e565b868310156124c057848901516124bc601f8916826123c9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250f826119e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612541576125406124d5565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b61256b8161254c565b811461257657600080fd5b50565b60008151905061258881612562565b92915050565b61259781611fba565b81146125a257600080fd5b50565b6000815190506125b48161258e565b92915050565b6000815190506125c981611da8565b92915050565b600080600080600060a086880312156125eb576125ea61185b565b5b60006125f988828901612579565b955050602061260a888289016125a5565b945050604061261b888289016125ba565b935050606061262c888289016125ba565b925050608061263d88828901612579565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612684826119e3565b915061268f836119e3565b92508282039050818111156126a7576126a66124d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6126e5816121ca565b81146126f057600080fd5b50565b600081519050612702816126dc565b92915050565b60006020828403121561271e5761271d61185b565b5b600061272c848285016126f3565b91505092915050565b60008154905061274481612230565b9050919050565b818103612759575050612831565b61276282612735565b67ffffffffffffffff81111561277b5761277a61186f565b5b6127858254612230565b612790828285612376565b6000601f8311600181146127bf57600084156127ad578287015490505b6127b785826123e7565b86555061282a565b601f1984166127cd87612261565b96506127d886612261565b60005b82811015612800578489015482556001820191506001850194506020810190506127db565b8683101561281d5784890154612819601f8916826123c9565b8355505b6001600288020188555050505b5050505050505b56fea264697066735822122096ebfd4845f146b8a4cb268b3d18a2bb789565292e7a2ee0c5c1e95eca3701d464736f6c63430008110033a26469706673582212209c67a64af723da3dab643a467d873328b8a38181f5949689f09e325cd4f51e8d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffeeFactory",
        "label": "deployedBuyMeCoffees",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffeeFactory",
        "label": "superUser",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 66,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffeeFactory",
        "label": "registered",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 69,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffeeFactory",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}